pipeline {
  agent any

  environment {
    GIT_CREDENTIALS = 'TSSH'
    DEPLOY_DIR      = '/opt/myapp/backend'
    SERVICE_NAME    = 'myapp-backend.service'
  }

  stages {
    stage('Checkout & Fetch') {
      steps {
        sshagent([env.GIT_CREDENTIALS]) {
          // –ï—Å–ª–∏ –ø–∞–ø–∫–∏ –Ω–µ—Ç ‚Äî –∫–ª–æ–Ω–∏—Ä—É–µ–º, –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ fetch
          sh '''
            if [ ! -d backend/.git ]; then
              git clone git@github.com:artyomchumachenko/jefferson-api.git backend
            fi
            cd backend
            git fetch origin master
          '''
        }
      }
    }

    stage('Check Changes') {
      steps {
        script {
          dir('backend') {
            // –ª–æ–∫–∞–ª—å–Ω—ã–π –∏ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Ö–µ—à–∏
            def local  = sh(script: 'git rev-parse HEAD',          returnStdout: true).trim()
            def remote = sh(script: 'git rev-parse origin/master', returnStdout: true).trim()

            if (local == remote) {
              echo "‚ö†Ô∏è HEAD (${local}) —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å origin/master ‚Äî –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç, pipeline –∑–∞–≤–µ—Ä—à—ë–Ω."
              currentBuild.result = 'SUCCESS'
              // true = –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
              error('No changes')
            } else {
              echo "‚úÖ –ù–æ–≤—ã–µ –∫–æ–º–º–∏—Ç—ã: –ª–æ–∫–∞–ª–∫–∞ ${local} vs origin ${remote} ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º."
              sh 'git reset --hard origin/master'
            }
          }
        }
      }
    }

    stage('Build & Deploy') {
      steps {
        dir('backend') {
          sh 'mvn clean package -DskipTests'
        }
        // –î–µ–ø–ª–æ–π–∏–º –≤—Å—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ backend –≤ –ø—Ä–æ–¥–æ–≤—É—é –ø–∞–ø–∫—É
        sh '''
          rm -rf ${DEPLOY_DIR}/*
          rsync -av --delete backend/ ${DEPLOY_DIR}/
          systemctl restart ${SERVICE_NAME}
        '''
      }
    }
  }

  post {
    success { echo 'üéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ.' }
    failure {
      script {
        if (currentBuild.result == 'SUCCESS') {
          echo '‚ÑπÔ∏è –ë–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, –±–∏–ª–¥/–¥–µ–ø–ª–æ–π –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å.'
        } else {
          echo '‚ùå –û—à–∏–±–∫–∞, —Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏.'
        }
      }
    }
  }
}
